using UnityEngine;

public static class Defines
{

    public static int NumPlayer = 6;//??????
    public static int[] GunLayoutTypeToNumPlay = new int[] {1,2,3,4,4,6,8,10
,6,6,8,8,8,8,12,16,20
,2,2,4,4,6,6,8,8,8,8,10,10,12,14,16};//??????????????????????

    public static int MaxNumPlayer = 20;//?????????
    public static float TimeBackGroundJumpSelect = 0.5F;//??????????? ??????? ???
    public static int NumScoreUpMax = 10000000;//????????1000w
    public static int[] ChangeGunNeedScore = new int[] { 1, 50, 1001 ,10000};//??????????????????,??????GunLevelType???????????

    public static float ClearFishRadius = 1.1F;//????????????? KillFishRadius*?????? ?????


    //public static UnityEngine.Rect WorldDimensionUnit = new UnityEngine.Rect(-1.777778F, -1F, 3.555556F, 2F);//???????????(Unity????n??)
    public static UnityEngine.Rect WorldDimensionUnit = new UnityEngine.Rect(-683F, -384F, 1366F, 768F);//???????????(Unity????n??)

    public static int OriginWidthUnit = 1366;
    public static int OriginHeightUnit = 768;

    public static int ScreenWidthUnit = 854;
    public static int ScreenHeightUnit = 480;

    public static int SoundVolumeLevelNum = 16;//??????????
    public static int PswLength = 6;//??????
    public static float FreezeBombTime = 10F;//?????????????? ????:??

    public static float OffsetAdv_FishGlobleDepth = 0.05F;//??????????
    //???
    //???-9.3~-9
    //public static float GlobleDepth_PrepareInBG = -9.9F;//????????
    //public static float GlobleDepth_GameDataViewer = -9.8F;//????????
    //public static float GlobleDepth_BombParticle = -9.5F;//???????
    //public static float GlobleDepth_DieFish = -9.4F;//??????
    //public static float GlobleDepth_PlayerTargeter = -9.3F;//?????????
    //public static float GlobleDepth_Web = -8.9F;//????
    //public static float GlobleDepth_WaterWave = -8F;//???????????????????
    //public static float GlobleDepth_ChangeNewScene = -7.99F;//??????????????
    //public static float GlobleDepth_SceneSweeper = -7.5F;//?????????????????
    //public static float GlobleDepth_SceneBubblePar = -0.5F;//????????



    public static float GlobleDepth_PrepareInBG = 90F;//????????
    public static float GlobleDepth_GameDataViewer = 100F;//????????
    

    public static float GlobleDepth_ChangeNewScene = 200F;//??????????????

    public static float GlobleDepth_DieFishPopDigit = 210F;//??????????????
    public static float GlobleDepth_BombParticle = 300F;//???????
    public static float GlobleDepth_LiziKa = 400F;//?????
    
    public static float GlobleDepth_DieFish = 420F;//????????

    public static float GlobleDepth_PlayerTargeter = 540F;//?????????
    public static float GlobleDepth_Web = 560F;//????
    
    public static float GlobleDepth_WaterWave = 580F;//???????????????????
    public static float GlobleDepth_SceneSweeper = 590F;//?????????????????
    public static float GlobleDepth_FishBase = 801F;//????????

    public static float GlobleDepth_SceneBubblePar = 910F;//????????(????)
    public static float GlobleDepth_TempSceneShake = 940F;//?????????????????


    public static float GMDepth_Fish = 850F;//???????????? 
    public static float GlobleDepth_SceneBackground = 950F;
    
    //
    //???:      501~600
    //??????:    601~900
    //????:      901~1000
    
}
public static class PubFunc
{
    public static Quaternion QuatRotateZ90 = new Quaternion(0F, 0F, 0.7F, 0.7F);//??Z?????90??

    /// <summary>
    /// ??????right????????????????????
    /// </summary>
    /// <param name="right"></param>
    /// <returns></returns>
    public static Quaternion RightToRotation(Vector3 rightTarget)
    {
        return Quaternion.LookRotation(Vector3.forward, rightTarget) * QuatRotateZ90;
    }
}

public enum Language
{
    Cn,
    En
}

public enum HittableType
{
    Normal,         //?????typeIndex:0~49
    AreaBomb,       //???????typeIndex 100~149
    SameTypeBomb,   //??????typeIndex:??Normal?????
    FreezeBomb,      //???????
    SameTypeBombEx  //???????????????????
}

public struct FishOddsData
{
    public FishOddsData(uint id, int odds) { ID = id; Odds = odds; }
    public uint ID;
    public int Odds; 
}

public delegate void Event_Generic();
public enum HpyInputKey
{
    Up, Down, Left, Right, Fire, Advance ,ScoreUp,ScoreDown,OutBounty
    , BS_Up, BS_Down, BS_Left, BS_Right,BS_Confirm, BS_Cancel,BS_GameLite

}

[System.Serializable]
public class WebScoreScaleRatio
{
    public WebScoreScaleRatio()
    {
        Scale = PositionScale = /*ScaleCollider =*/ BubbleScale = 1F;
        
    }
    public int StartScore;//??????,????????????????
    //public float Size;//??????unity??????
    public float Scale;//????????-???????
    public float PositionScale;//?????????
    //public float ScaleCollider;//????????
    public float BubbleScale;//????????
    public string NameSprite;//??sprite id
    public GameObject PrefabWeb;//??sprite prefab
    public GameObject PrefabWebBoom;//??????,???prefab
}

/// <summary>
/// ???????
/// </summary>
public enum FlyingCoinType
{
    Sliver,Glod
}

/// <summary>
/// ???????
/// </summary>
public enum GunType
{
    Normal,
    NormalTri,
    NormalQuad,
    Lizi,
    LiziTri, 
    LiziQuad
}

/// <summary>
/// ????????,????.????.???
/// </summary>
public enum GunLevelType
{
    Dbl,
    Tri,
    Quad
}

/// <summary>
/// ???????,???,????
/// </summary>
public enum GunPowerType
{
    Normal,
    Lizi
}

/// <summary>
/// ??????
/// </summary>
public enum GameDifficult
{
    VeryEasy,
    Easy,
    Hard,
    VeryHard,
    DieHard
}
/// <summary>
/// ??????????
/// </summary>
public enum OutBountyType
{
    OutCoinButtom,
    OutTicketButtom,
    OutCoinImmediate,
    OutTicketImmediate
}

/// <summary>
/// ????????
/// </summary>
public enum ArenaType
{
    Small,Medium,Larger
}


/// <summary>
///  ???????????(??????,???????????????????????)
/// </summary>
public enum GunLayoutType
{
    //W10,W8,W6,W4,L4,L3,
    L1, L2, L3, L4, W4, W6, W8, W10,                                                        //????
    S_L6S, S_L6D, S_L8S, S_L8D, S_W8S, S_W8D, S_W12S, S_W16S,S_W20S,                //???
    L_L2S, L_L2D, L_L4S, L_L4D, L_L6S, L_L6D, L_L8S, L_L8D, L_W8S, L_W8D, L_W10S, L_W10D, L_W12S, L_W14S, L_W16S//????
}

